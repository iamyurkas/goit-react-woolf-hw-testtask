{"version":3,"file":"static/js/146.6e04003b.chunk.js","mappings":"iXACA,GAAgB,oBAAsB,uCAAuC,cAAgB,iCAAiC,kBAAoB,qCAAqC,UAAY,6BAA6B,YAAc,+BAA+B,iBAAmB,oCAAoC,SAAW,4BAA4B,KAAO,wBAAwB,UAAY,6BAA6B,eAAiB,kCAAkC,SAAW,4BAA4B,MAAQ,yBAAyB,SAAW,4BAA4B,aAAe,gCAAgC,cAAgB,iCAAiC,aAAe,gCAAgC,cAAgB,iCAAiC,eAAiB,kCAAkC,UAAY,6BAA6B,SAAW,4BAA4B,eAAiB,kCAAkC,qBAAuB,yC,SCiMl+B,GAAeA,EAAAA,EAAAA,KANS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAME,SAASD,QACxBE,MAAOH,EAAME,SAASC,MACtBC,cAAeJ,EAAME,SAASE,cAC/B,GAED,EA5KkB,SAAHC,GAA2C,IAArCJ,EAAOI,EAAPJ,QAASE,EAAKE,EAALF,MAAOC,EAAaC,EAAbD,cAC7BE,GAAWC,EAAAA,EAAAA,MAEjBC,GAAsCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,IAElCI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACpDJ,GACFT,GAASc,EAAAA,EAAAA,IAAiBL,GAE9B,GAAG,CAACT,IAEJ,IAgBMe,EAAkB,SAAAC,GACtB,IAAMC,EAAWD,EAAOE,IAExBlB,GAASmB,EAAAA,EAAAA,IAAmBF,IALHG,EAAAA,GAAAA,KAAW,kCAQpC,IAEMC,GAFkBX,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,IAEpCS,QACvC,SAAA1B,GAAQ,OAAIA,EAASsB,MAAQD,CAAQ,IAGvCL,aAAaW,QAAQ,gBAAiBb,KAAKc,UAAUH,GACvD,EAEA,OACEI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,IACkB,IAAzB9B,EAAc+B,QACbJ,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAAA,eAAsBL,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAAA,qBAA4BL,SAAC,mCAC5CC,EAAAA,EAAAA,KAACK,EAAAA,GAAc,CAACC,UAAW,UAG7BR,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAAA,oBAA2BL,SAAA,CACxC/B,IAAWgC,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAACC,KAAM,GAAIC,MAAM,YACnCvC,IACC4B,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAAA,MAAaL,SAAA,CAAC,sBACR7B,EAAMwC,YAG5B1C,IAAYE,IACZ8B,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,cAAqBL,SAClC5B,EAAcwC,KACb,SAACtB,EAAQuB,GAAK,OACZvB,IACEW,EAAAA,EAAAA,KAAA,OAAiBG,UAAWC,EAAAA,aAAoBL,UAC9CC,EAAAA,EAAAA,KAAA,MAAqBG,UAAWC,EAAAA,kBAAyBL,UACvDD,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAAA,UAAiBL,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,iBAAwBL,UACtCC,EAAAA,EAAAA,KAAA,OACEG,UAAWC,EAAAA,SACXS,IAAKxB,EAAOyB,QAAQ,GACpBC,IAAK1B,EAAO2B,KACZC,MAAO,IACPC,OAAQ,SAGZpB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAAA,KAAYL,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKV,EAAO2B,QACZlB,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAAA,UAAiBL,SAAA,EAC/BD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,SAAEV,EAAO8B,MAAMC,QAAQ,OAC3BpB,EAAAA,EAAAA,KAAA,UACEG,UAAWC,EAAAA,SACXiB,QAAS,kBAAMjC,EAAgBC,EAAO,EAACU,UAEvCC,EAAAA,EAAAA,KAAA,OAAKa,IAAKS,EAAAA,EAAgBP,IAAI,2BAIpCjB,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAAA,eAAsBL,SAAA,EACpCD,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAAA,eAAsBL,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,UAAkBS,IAAKU,EAAAA,EAAWR,IAAI,cACrD1B,EAAOmC,OAAO,IAAEnC,EAAOoC,QAAQvB,OAAO,gBAGzCJ,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAAA,SAAgBL,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,UAAkBS,IAAKa,EAAAA,EAAeX,IAAI,eAC1Df,EAAAA,EAAAA,KAAA,QAAAD,SAAOV,EAAOsC,kBAGlB7B,EAAAA,EAAAA,MAAA,KAAGK,UAAWC,EAAAA,YAAmBL,SAAA,CAC9BV,EAAOuC,YAAY,UAEtB9B,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAAA,aAAoBL,SAAA,EACjCD,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAAA,aAAoBL,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,MAAcS,IAAKgB,EAAAA,EAAcd,IAAI,kBACrDjB,EAAAA,EAAAA,MAAA,KAAGK,UAAWC,EAAAA,cAAqBL,SAAA,CAChCV,EAAOyC,OAAO,iBAGnBhC,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAAA,aAAoBL,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,MAAcS,IAAKkB,EAAAA,EAAmBhB,IAAI,kBAC1Df,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAAA,cAAqBL,SAChCV,EAAO2C,mBAGZlC,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAAA,aAAoBL,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,MAAcS,IAAKoB,EAAAA,EAAWlB,IAAI,kBAClDf,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAAA,cAAqBL,SAChCV,EAAO6C,aAGZpC,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAAA,aAAoBL,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,MAAcS,IAAKsB,EAAAA,EAAcpB,IAAI,kBACrDf,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAAA,cAAqBL,SAChCV,EAAO+C,QAAQC,SAAW,gBAG/BvC,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAAA,aAAoBL,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,MAAcS,IAAKyB,EAAAA,EAAUvB,IAAI,kBACjDf,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAAA,cAAqBL,SAChCV,EAAO+C,QAAQG,KAAO,cAG3BzC,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAAA,aAAoBL,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,MAAcS,IAAK2B,EAAAA,EAAWzB,IAAI,kBAClDf,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAAA,cAAqBL,SAChCV,EAAO+C,QAAQK,eAAiB,GAAK,cAK5CzC,EAAAA,EAAAA,KAAA,UAAQG,UAAWC,EAAAA,SAAiBiB,QAAS,kBAlIrD/B,EAkIqED,EAAOE,SAjI5FX,GAAe,SAAA8D,GAAU,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBD,GAAU,IAAAE,EAAAA,EAAAA,GAAA,GACZtD,GAAW,GAAI,IAHF,IAAAA,CAkIgF,EAACS,SAAC,iBAI3EpB,EAAYU,EAAOE,OAClBS,EAAAA,EAAAA,KAAC6C,EAAAA,EAAK,CACJxD,OAAQA,EACRyD,WAAY,kBAlIrBxD,EAkIsCD,EAAOE,SAjI9DX,GAAe,SAAA8D,GAAU,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBD,GAAU,IAAAE,EAAAA,EAAAA,GAAA,GACZtD,GAAW,GAAK,IAHF,IAAAA,CAkIiD,QApFvCD,EAAOE,MADRqB,EA2FX,OAITZ,EAAAA,EAAAA,KAACK,EAAAA,GAAc,CAACC,UAAW,WAKrC,G","sources":["webpack://react-homework-template/./src/pages/Favorites/Favorites.module.css?54b5","pages/Favorites/Favorites.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"favorites_container\":\"Favorites_favorites_container__i41PC\",\"cards_wrapper\":\"Favorites_cards_wrapper__x+Omu\",\"card_list_wrapper\":\"Favorites_card_list_wrapper__4saZT\",\"card_info\":\"Favorites_card_info__Of3b4\",\"description\":\"Favorites_description__FRA0j\",\"card_img_wrapper\":\"Favorites_card_img_wrapper__vBQbP\",\"card_img\":\"Favorites_card_img__L1ooO\",\"info\":\"Favorites_info__Q9VVk\",\"left_info\":\"Favorites_left_info__0pX1U\",\"secondary_info\":\"Favorites_secondary_info__o6Ubu\",\"like_btn\":\"Favorites_like_btn__DgObc\",\"icons\":\"Favorites_icons__Qz+JY\",\"show_btn\":\"Favorites_show_btn__pS2hu\",\"item_details\":\"Favorites_item_details__ylNsG\",\"header_detail\":\"Favorites_header_detail__YpDBK\",\"list_details\":\"Favorites_list_details__NKCe9\",\"load_more_btn\":\"Favorites_load_more_btn__wIMvW\",\"empty_template\":\"Favorites_empty_template__osDdW\",\"star_icon\":\"Favorites_star_icon__c6WZN\",\"flex_box\":\"Favorites_flex_box__-3tKe\",\"rating_wrapper\":\"Favorites_rating_wrapper__vnsi7\",\"empty_template_title\":\"Favorites_empty_template_title__Eii2T\"};","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { connect } from 'react-redux';\n\nimport { setFavoriteCards ,removeFavoriteCard } from '../../redux/actions/actions';\nimport { NavList } from '../../components/NavList/NavList';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Modal } from '../../components/Modal/Modal';\n\nimport heart_red_icon from '../../assets/icons/heart_red.svg';\nimport wind_icon from '../../assets/icons/wind.svg';\nimport bed_icon from '../../assets/icons/bed.svg';\nimport kitchen_icon from '../../assets/icons/kitchen.svg';\nimport fuel_icon from '../../assets/icons/fuel.svg';\nimport transmission_icon from '../../assets/icons/transmission.svg';\nimport persons_icon from '../../assets/icons/persons.svg';\nimport star_icon from '../../assets/icons/star.svg';\nimport location_icon from '../../assets/icons/location.svg';\n\nimport styles from './Favorites.module.css';\n\nconst Favorites = ({ loading, error, favoriteCards }) => {\n  const dispatch = useDispatch();\n\n  const [modalStates, setModalStates] = useState({});\n\n  useEffect(() => {\n    const storedFavorites = JSON.parse(localStorage.getItem('favoriteCards'));\n    if (storedFavorites) {\n      dispatch(setFavoriteCards(storedFavorites));\n    }\n  }, [dispatch]);\n\n  const openModal = camperId => {\n    setModalStates(prevStates => ({\n      ...prevStates,\n      [camperId]: true,\n    }));\n  };\n\n  const closeModal = camperId => {\n    setModalStates(prevStates => ({\n      ...prevStates,\n      [camperId]: false,\n    }));\n  };\n\n  const notifyRemove = () => toast.info('Camper removed from favorites!');\n\n  const handleLikeClick = camper => {\n    const camperId = camper._id;\n\n    dispatch(removeFavoriteCard(camperId));\n\n    notifyRemove();\n    const storedFavorites = JSON.parse(localStorage.getItem('favoriteCards')) || [];\n\n    const updatedFavorites = storedFavorites.filter(\n      favorite => favorite._id !== camperId\n    );\n\n    localStorage.setItem('favoriteCards', JSON.stringify(updatedFavorites));\n  };\n\n  return (\n    <div>\n      <NavList />\n      {favoriteCards.length === 0 ? (\n        <div className={styles.empty_template}>\n          <h2 className={styles.empty_template_title}>There are no favorite campers</h2> \n          <ToastContainer autoClose={3000} />\n        </div>\n      ) : (\n        <div className={styles.favorites_container}>\n          {loading && <Loader size={80} color=\"#00BFFF\" />}\n          {error && (\n            <div className={styles.Error}>\n              An error occurred: {error.message}\n            </div>\n          )}\n          {!loading && !error && (\n            <div className={styles.cards_wrapper}>\n              {favoriteCards.map(\n                (camper, index) =>\n                  camper && (\n                    <div key={index} className={styles.FavoriteCard}>\n                      <ul key={camper._id} className={styles.card_list_wrapper}>\n                        <li className={styles.card_info}>\n                          <div className={styles.card_img_wrapper}>\n                            <img\n                              className={styles.card_img}\n                              src={camper.gallery[0]}\n                              alt={camper.name}\n                              width={290}\n                              height={310}\n                            />\n                          </div>\n                          <div>\n                            <div className={styles.info}>\n                              <h2>{camper.name}</h2>\n                              <div className={styles.left_info}>\n                                <h2>â‚¬{camper.price.toFixed(2)}</h2>\n                                <button\n                                  className={styles.like_btn}\n                                  onClick={() => handleLikeClick(camper)}\n                                >\n                                  <img src={heart_red_icon} alt=\"favorite icon\" />\n                                </button>\n                              </div>\n                            </div>\n                            <div className={styles.secondary_info}>\n                              <div className={styles.rating_wrapper}>\n                                <img className={styles.star_icon} src={star_icon} alt=\"star icon\" />\n                                {camper.rating}({camper.reviews.length} Reviews)\n                              </div>\n\n                              <div className={styles.flex_box}>\n                                <img className={styles.star_icon} src={location_icon} alt=\"star icon\" />\n                                <span>{camper.location}</span>\n                              </div>\n                            </div>\n                            <p className={styles.description}>\n                              {camper.description}...\n                            </p>\n                            <ul className={styles.list_details}>\n                              <li className={styles.item_details}>\n                                <img className={styles.icons} src={persons_icon} alt=\"persons icon\" />\n                                <p className={styles.header_detail}>\n                                  {camper.adults} adults\n                                </p>\n                              </li>\n                              <li className={styles.item_details}>\n                                <img className={styles.icons} src={transmission_icon} alt=\"persons icon\" />\n                                <p className={styles.header_detail}>\n                                  {camper.transmission}\n                                </p>\n                              </li>\n                              <li className={styles.item_details}>\n                                <img className={styles.icons} src={fuel_icon} alt=\"persons icon\" />\n                                <p className={styles.header_detail}>\n                                  {camper.engine}\n                                </p>\n                              </li>\n                              <li className={styles.item_details}>\n                                <img className={styles.icons} src={kitchen_icon} alt=\"persons icon\" />\n                                <p className={styles.header_detail}>\n                                  {camper.details.kitchen && 'Kitchen'}\n                                </p>\n                              </li>\n                              <li className={styles.item_details}>\n                                <img className={styles.icons} src={bed_icon} alt=\"persons icon\" />\n                                <p className={styles.header_detail}>\n                                  {camper.details.beds + ' beds'}\n                                </p>\n                              </li>\n                              <li className={styles.item_details}>\n                                <img className={styles.icons} src={wind_icon} alt=\"persons icon\" />\n                                <p className={styles.header_detail}>\n                                  {camper.details.airConditioner > 0 && 'AC'}\n                                </p>\n                              </li>\n                            </ul>\n\n                            <button className={styles.show_btn} onClick={() => openModal(camper._id)}>\n                              Show more\n                            </button>\n                          </div>\n                          {modalStates[camper._id] && (\n                            <Modal\n                              camper={camper}\n                              closeModal={() => closeModal(camper._id)}\n                            />\n                          )}\n                        </li>\n                      </ul>\n                    </div>\n                  )\n              )}\n            </div>\n          )}\n          <ToastContainer autoClose={3000} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  loading: state.favorite.loading,\n  error: state.favorite.error,\n  favoriteCards: state.favorite.favoriteCards,\n});\n\nexport default connect(mapStateToProps)(Favorites);\n"],"names":["connect","state","loading","favorite","error","favoriteCards","_ref","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","modalStates","setModalStates","useEffect","storedFavorites","JSON","parse","localStorage","getItem","setFavoriteCards","handleLikeClick","camper","camperId","_id","removeFavoriteCard","toast","updatedFavorites","filter","setItem","stringify","_jsxs","children","_jsx","NavList","length","className","styles","ToastContainer","autoClose","Loader","size","color","message","map","index","src","gallery","alt","name","width","height","price","toFixed","onClick","heart_red_icon","star_icon","rating","reviews","location_icon","location","description","persons_icon","adults","transmission_icon","transmission","fuel_icon","engine","kitchen_icon","details","kitchen","bed_icon","beds","wind_icon","airConditioner","prevStates","_objectSpread","_defineProperty","Modal","closeModal"],"sourceRoot":""}